version: '3'
services:
  places-client:
    container_name: places-client
    build:
      context: ./places_client
    ports:
      - "8100:8100"
    restart: unless-stopped
    depends_on:
      - places-server
    networks:
      - frontend

  places-server:
    container_name: places-server
    build:
      context: ./places_server
    environment:
      - DEBUG=${DEBUG:-True}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-00000000000000000000000000000000}
      - DATABASE_URL=${DATABASE_URL:-sqlite+aiosqlite:///}
    restart: unless-stopped
    depends_on:
      places-db:
        condition: service_healthy
    networks:
      - frontend
      - backend

  places-db:
    container_name: places-db
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    restart: unless-stopped
    volumes: 
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
    networks:
      - backend

volumes:
  postgres-data:

networks:
  backend:
  frontend: